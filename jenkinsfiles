pipeline {
    agent any
    tools {
        nodejs 'nodejs'
        dockerTool 'docker'
    }

    stages {
        stage("git clone") {
            steps {
                git branch: 'main', url: 'https://github.com/MarouaneBRomdhane/CI_CD_DOCCUMENTATION-main.git'
            }
        }

        stage("install dependencies") {
            steps {
                sh 'npm install'
            }
        }

        stage("build the project") {
            steps {
                sh 'npm run build'
            }
        }

        stage('Install SonarScanner CLI') {
            steps {
                script {
                    dir('CI_CD_DOCCUMENTATION-MAIN') {
                        sh 'npm install --save-dev sonarqube-scanner'
                    }
                }
            }
        }

        stage('Configure SonarScanner') {
            steps {
                script {
                    sh 'echo "sonar.projectKey=CI_CD_DOCCUMENTATION_MAIN" > ./sonar-project.properties'
                    sh 'echo "sonar.projectName=CI_CD_DOCCUMENTATION-MAIN" >> ./sonar-project.properties'
                    sh 'echo "sonar.projectVersion=3" >> ./sonar-project.properties'
                    sh 'echo "sonar.sources=./src" >> ./sonar-project.properties'
                    sh 'echo "sonar.language=java" >> ./sonar-project.properties'
                    sh 'echo "sonar.host.url=http://sonarqube:9000" >> ./sonar-project.properties'
                    sh 'echo "sonar.login=squ_1a95a09bd281100eda06cad9ad8acf999aafaba7" >> ./sonar-project.properties'
                }
            }
        }

        stage('Run SonarScanner') {
            steps {
                script {
                    dir('CI_CD_DOCCUMENTATION') {
                        sh 'npm run sonar'
                    }
                }
            }
        }

        stage('Uploading to Nexus') {
            steps {
                sh 'docker login localhost:8085 -u admin -p admin123'
                sh 'docker tag prod:v1 localhost:8085/nexus/production:v2'
                sh 'docker push localhost:8085/nexus/production:v2'
            }
        }
    }

    post {
        success {
            echo 'SonarScanner analysis completed successfully!'
        }
        failure {
            echo 'SonarScanner analysis failed!'
        }
    }
}
